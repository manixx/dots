#!/bin/sh 

set -e 

aur_dir=~/.aur

packages=(
  alsa-utils 
  base-devel # for AUR packages
  canto-curses
  chromium 
  dhcpcd
  dmenu
  dnscrypt-proxy
  docker
  docker-compose
  dunst
  feh
  firefox 
  fuse
  fzf 
  gcc # for .Xresoures parsing 
  git 
  i3-gaps
  i3lock
  i3status
  imagemagick # for screen locking effect 
  iw 
  libnotify
  man
  netctl 
  nmap
  nnn
  nodejs
  npm
  openssh 
  otf-font-awesome
  pass 
  perl-anyevent-i3 # to get i3 workspace export working
  pulseaudio
  python
  python-pip
  python2
  python2-pip
  redshift
  ruby 
  rxvt-unicode
  scrot
  sshfs
  sudo 
  task 
  telegram-desktop
  the_silver_searcher
  trash-cli
  ttf-dejavu
  unclutter
  unzip 
  urxvt-perls
  wget 
  wpa_supplicant 
  xautolock
  xclip
  xf86-video-intel
  xorg-server
  xorg-xbacklight
  xorg-xinit
  xorg-xprop
  xorg-xrandr
  zsh 
  zsh-autosuggestions
  zsh-completions
)

aur_packages=(
  ccls
  compton-tryone-git
  spotify 
  urxvt-font-size-git
  zsh-fast-syntax-highlighting-git
)

coc_extensions=(
  coc-angular
  coc-calc
  coc-calc
  coc-css
  coc-explorer
  coc-flutter
  coc-git
  coc-highlight
  coc-html
  coc-java
  coc-java
  coc-json
  coc-lists
  coc-markdownlint
  coc-phpls
  coc-python
  coc-r-lsp
  coc-rls
  coc-rust-analyzer
  coc-snippets
  coc-spell-checker
  coc-svg
  coc-texlab
  coc-tsserver
  coc-vimlsp
  coc-xml
  coc-yaml
  coc-yank
)

npm_packages=(
  bash-language-server
  dockerfile-language-server-nodejs
  neovim # for neovim health
)

# 
# INSTALL PACMAN PACKAGES
#

sudo pacman -S --needed ${packages[@]}

#
# INSTALL AUR PACKAGES
#

gpg --recv-keys 4773BD5E130D1D45 # GPG Key for Spotify 

mkdir -p ${aur_dir}
for package in "${aur_packages[@]}"; do 
  if [ ! -d ${aur_dir}${package} ]; then 
    git clone https://aur.archlinux.org/${package} ${aur_dir}${package} 
    (cd ${aur_dir}${package} && makepkg --needed -si) 
  else 
    echo "Package \"${package}\" already there, skipping..."
  fi
done

# 
# SETUP NVIM 
#

mkdir -p ~/.config/nvim
cp ./nvim/* ~/.config/nvim

gem install neovim
python3 -m pip install --user --upgrade pynvim
python2 -m pip install --user --upgrade pynvim

curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

nvim +"PlugInstall --sync" +qa

for extension in "${coc_extensions[@]}"; do 
  nvim +"CocInstall -sync ${extension}" +qa
done

# 
# SETUP NPM PACKAGES
#

mkdir -p ~/.npm-global
npm config set prefix '~/.npm-global'

npm i -g ${npm_packages[@]}

# 
# SETUP DNSCRYPT PROXY 
#

if ! grep -Fxq "name_servers=127.0.0.1" /etc/resolvconf.conf; then
  sudo sh -c "echo 'name_servers=127.0.0.1' >> /etc/resolvconf.conf"
fi

sudo systemctl enable dnscrypt-proxy.service
sudo systemctl start  dnscrypt-proxy.service

# TODO refresh resolv conf

#
# SETUP CONFIG CONFIG FILES 
#

exec ./export-config
